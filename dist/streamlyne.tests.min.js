console.log("Starting Tests");var conn=Streamlyne.connect({host:"http://127.0.0.1:5000/",email:"testing@streamlyne.co",token:"sl-dev"});console.log(conn),test("Testing QUnit",function(){ok(!0,"Passed!")}),module("Steamlyne - Asset",{}),asyncTest("Read All",function(){expect(1),Streamlyne.asset.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Attribute",{}),asyncTest("Read All",function(){expect(1),Streamlyne.attribute.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Group",{}),asyncTest("Read All",function(){expect(1),Streamlyne.group.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Log",{}),asyncTest("Read All",function(){expect(1),Streamlyne.log.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Organization",{}),asyncTest("Read All",function(){expect(1),Streamlyne.organization.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Site",{}),asyncTest("Read All",function(){expect(1),Streamlyne.site.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Users",{}),asyncTest("Read All",function(){expect(1),Streamlyne.user.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),module("Steamlyne - Work Orders",{}),asyncTest("Read All",function(){expect(1),Streamlyne.workOrder.readAll(conn,function(a){a||ok(!0,"Passed and ready to resume!"),start()})}),asyncTest("Create",function(){expect(1),Streamlyne.workOrder.create(conn,{data:{description:"This is a test Work Order at "+new Date+"."}},function(a,b){console.log("Created Work Order",a,b),a?ok(!1,"Failed"):ok(!0,"Passed and ready to resume!"),start()})});var workOrder=new StreamlyneWorkOrder;workOrder.readAll(conn,function(a,b){console.log(a,b)});